■ IT
・IT
    情報技術(Information Technology)。情報を取得、加工、保存、伝送するための科学技術のこと。
    ハードやソフトウェア、インフラなど技術そのものを指す意味合いが強い。

・ICT
    情報通信技術(Information and Communication Technology)。ITとほぼ同義だが、Communicationを
    より重視しており、ITを活用したサービスや活用方法自体を指す。国際的にはICTで定着している。

・IoT
    モノのインターネット(Internet of Things)。身の回りのあらゆるものがインターネットに繋がる仕組み。

■ OS
・OS
    Operating System。コンピュータのオペレーション（操作・運用・運転）を司るシステムソフトウェアのこと。
    
・Windows
    Microsoft社が開発・販売しているOS。

・macOS (Mac OS X)
    Apple社が開発・販売しているOS。

・UNIX
    AT&T社のベル研究所で開発されたOS。多くのOSのベースとなっている。現存する中で最も古いOS。

・Linux
    Unix系OSの１つ。

■ 言語・環境
・マークアップ／フロントエンド
    マークアップ：HTMLでサイト内の文書に意味づけをしていく作業のこと。
    フロントエンド：WebサービスやWebアプリケーションで直接ユーザーの目に触れる部分のこと。
    また、バックエンドのソフトウェアと直接やり取りをする部分のこと。

    主にHTMLの設計・実装を行う職種をマークアップエンジニア、デザイナーが設計したデザインを元に
    HTML、CSS、JavaScriptを使ってコーディングする職種をフロントエンドエンジニアという。

    ・HTML
        HyperText Markup Language。ウェブページを作成するために開発された言語。

    ・CSS
        Cascading Style Sheets。ウェブページのスタイルを指定するための言語。色・サイズ・レイアウトなどの
        表示スタイルや、 プリンタなどの機器で印刷・出力される際の出力スタイル、 音声で読み上げられる際の
        再生スタイルなど、 ウェブページをどのようなスタイルで表示・出力・再生するかについて指定することが可能。

    ・JavaScript
        ウェブページに動的な振る舞いをさせるプログラミング言語。

・サーバーサイド
    サーバーやデータベースのシステムなど、ユーザーの目に見えない部分のこと。

    ・.NET（C#, VB）
        .NET Framework。共通言語ランタイム（CLR：Common Language Runtime）」と呼ばれるプログラム実行エンジン、
        基本クラス・ライブラリ（BCL：Base Class Library）、各種ライブラリ／フレームワークから構成される。
        C# と Visual Basic は、.NET Framework 上で実行されるさまざまな種類のアプリケーションを
        作成するために設計されたプログラミング言語。

    ・Java
        クラスベースのオブジェクト指向のプログラミング言語。

        ・Java SE
            Java Standard Edition
            Java言語でプログラミングを行う際に最低限必要な機能をまとめたもの。
            アプリケーションを開発する場合はJDKをインストールしておく必要がある。
            パソコン上で動作するゲームや便利なソフトを作ることが可能。

        ・Java EE（Jakarta EE）
            Java Enterprise Edition
            JavaSEを元にしてサーバーサイドの機能を追加したもの。WebサイトやWebアプリケーションを開発する際に用いられる。

    ・Perl
        Practical Extraction and Report Language
        応用範囲が広く、システムユーティリティやソフトウェアツールの作成、データベースへのアクセス、
        グラフィックやネットワーク処理、そしてウェブプログラミングなどに適する言語。
        インタープリタ型のためコンパイル不要。

    ・PHP
        HTMLに埋め込むことができるスクリプト言語。サーバーサイドでコードを実行する。
        （JavaScriptは、クライアントサイドがコードを受け取り、そこで動作する）

    ・Ruby
        まつもとゆきひろ氏により開発されたオブジェクト指向スクリプト言語。コンパイル不要。
        Ruby on Railsを使うことで、WebサイトやWebベースの業務システムを効率良く開発できる。

■ サーバーソフト
・Apache
    Webサーバーソフトウェア(HTTPサーバー)。
    http処理に特化しているため、最初からWebサーバーとしての機能が豊富である一方、ある程度のメモリを必要とする。

・nginx
    同時リクエスト処理に特化しているため、多くの機能はついていないが、その分メモリが少なくても大丈夫。

・IIS
    Windows標準のWebサーバー。
    Windows標準のIISを使用する現場では、.netと呼ばれる技術で開発されたシステムが使われることが多い。

■ SQL
・SQL
    Structured Query Language。データベースに要求を出すことをクエリ（問い合わせ）という。
    コンピュータ言語のひとつだが、プログラミング言語ではない。
    リレーショナルデータベース(RDB)のデータを操作するための言語。
    データベースへ指示を出す言語は「SQL文」と呼び、命令文を組み合わせて処理を実施する。

    ・DB2
        IBMが開発・販売するデータベース管理システムの1つ。

    ・MySQL
        オープンソースのリレーショナルデータベース管理システム（RDBMS）。
        オープンソース系としては世界的には最も多く使用されており、Facebook、Twitter、YouTube、Amazon、Wikipediaなど、
        有名企業が導入している。

        ・Maria DB
            MySQLから派生したRDBMS。
            「列単位」で処理を行うカラム型データベースエンジンによる並列処理が特徴。

    ・Oracle DB
        Oracle社が開発・販売している、関係データベース管理システム (RDBMS) 。

    ・PostgreSQL
        オープンソースのリレーショナルデータベース管理システム（RDBMS）。MySQLとよく比較されるが、
        どちらも長所・短所があるため利用用途により優劣は異なる。多機能であることが特徴。
        （MySQLはシンプルなWebサービスに向いている）

    ・SQLite
        パブリックドメインの軽量な関係データベース管理システム (RDBMS)。
        サーバとしてではなくアプリケーションに組み込んで利用されるデータベース。
        一般的なRDBMSと違い、APIは単純にライブラリを呼び出すだけであり、データの保存に単一のファイルのみを使用することが特徴。

    ・SQL Server
        Microsoft SQL Server
        マイクロソフトが開発している、関係データベース管理システム (RDBMS) 。

・CRUD
    データベース管理システム（DBRS）に必要とされる4つの主要な機能、
    「作成（Create）」「読み出し（Read）」「更新（Update）」「削除（Delete）」をそれぞれ頭文字で表したもののこと。

・トランザクション
    一連の処理単位のこと。トランザクション内の処理は、全てが成功した時のみ確定される。
    処理の途中でエラーが起きた場合、そこまでの処理をロールバックして、トランザクション処理実行前の状態まで戻る。
    
    ・コミット
        データベースにおいてトランザクションによる内容更新を恒久的なものとして確定すること。
        一般にトランザクションの終了時にその更新を確定するという意味で「コミットする」などと使用する。

    ・ロールバック
        データ更新などで障害が起こったときに、その前の状態にまで戻ること。後進復帰とも言う。
        データベースでは、更新前のジャーナルファイルを使い、更新前の正常な状態に戻す。

・排他制御（排他ロック）
    共有資源（データやファイル）に対して複数のアクセスが見込まれる場合に、同時アクセスにより不整合が発生することを防ぐため、
    あるトランザクションが共有資源（データやファイル）にアクセスしている時は他トランザクションからはアクセスできないようにして
    直列に処理されるように制御すること。

    ・楽観ロック
        めったなことでは他者との同時更新は起きないであろう、という楽観的な前提の排他制御。
        データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、
        データの整合性を保証する方式。更新対象のデータがデータ取得時と同じ状態であることを判断するために、Versionを管理するための
        カラム(Versionカラム)を用意する。更新時の条件として、データ取得時のVersionとデータ更新時のVersionを同じとすることで、
        データの整合性を保証することができる。
        更新対象のデータがデータ取得時と同じ状態であることを判断するためのカラムを、「ロックキー」と呼ぶ。

    ・悲観ロック
        他者が同じデータに頻繁に変更を加えるであろう、という悲観的な前提の排他制御。更新対象のデータを取得する際にロックをかけることで、
        他のトランザクションから更新されないようにする方式。悲観ロックを使用する場合は、トランザクション開始直後に更新対象となる
        レコードのロックを取得する。ロックされたレコードは、トランザクションが、コミットまたはロールバックされるまで、他のトランザクション
        から更新されないため、データの整合性を保証することができる。

・実行計画
    どうしたらより短い時間でSQLを実行できるかを計算して導き出された、具体的な方法を「計画」としてまとめたもの。

・チューニング
    パフォーマンス基準を満たさないSQL文を診断および修復すること。

・パフォーマンス
    スループット：単位時間あたりの処理能力（並列処理ができる件数が多いほど高い）
    レスポンシブタイム（レイテンシー）：処理を実行してから結果が帰ってくるまでの時間
    など

・スロークエリ
    データベースにおいて、時間のかかっているSQL(遅いSQL)のこと。
    事業や実行する処理にもよるが、2秒以上かかっていたら大体遅い部類と言って良い。

・クエリログ
    クライアントからのMySQL Serverへの接続・接続解除の情報、およびクライアントから実行された全てのSQLクエリを出力してくれるログ。

・IDE（統合開発環境）
    Integrated Development Environment
    ソースコードを記述するエディタ、ソースコードからプログラムを生成するコンパイラ、コードの不正を発見・修正するデバッガなどの
    プログラム開発ツールをひとまとめにした開発環境のこと。

    ・Eclipse
        主にJavaで書かれており、主にJavaアプリケーションの開発に使用されるIDE。
        C、PHP、Julia、Perl、Python、R、Rubyなどプラグインを介して他のプログラミング言語のアプリケーションを開発するために使用することもできる。

    ・NetBeans
        オラクルを中心としたコミュニティにより開発されている、オープンソースのIDE。
        Java/PHP/C言語/C++/JavaScript/Groovy等のいくつかのプログラミング言語に対応している。
        シェア、多機能性、プラグインの豊富さは、Eclipseが上。

    ・SpringToolSuite
        Spring専用のIDE。Eclipseをベースにしている。
        Spring：Javaプラットフォーム向けのオープンソースアプリケーションフレームワーク。

・DBツール
    データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称。

    ・A5:SQL Mk-2
        Windows OSで使用可能なDB管理ツール。
        SQLの実行や、テーブル編集、ストアプロシージャの実行、ER図の作成等が可能。
        ストアプロシージャ：データベースに対する連続した複数の処理を一つのプログラムにまとめ、データと共に保存できるようにしたもの。

    ・pgAdmin
        GUIによるPostgreSQLの管理ツール。

    ・DBeaver
        Oracle、SQLServer、PostgreSQL、MySQL、MariaDB、SQLiteを始めとした計42種類のドライバに対応したSQLクライアントツール。
        UIがEclipseと同じ。機能が豊富。

    ・MySQL Workbench
        MySQLをGUIでわかりやすく操作するツール。
        日本語化されておらず、ツールバーやボタンの説明が全て英語。

    ・Sequel Pro
        MySQLのデータをGUI操作で管理するためのアプリケーション。Mac用。

    ・TeamSQL
        2019年2月末、サービス終了。
        Cross-Platform SQL Client：データーベースの種類に関係なく横断的に使えるSQLクライアントであった。

■ 肩書
・PM
    プロジェクトマネージャー
    プロジェクトの運営、品質、納期等に責任を持ち、プロジェクトを円滑に推進させる役割を果たすプロジェクト管理者。
    プロジェクトメンバーの選定、顧客折衝、案件受注、要件定義、品質管理、納期・進捗管理、コスト管理等を行う。

・PL
    プロジェクトリーダー
    システムの構築・導入プロジェクトにおいて、プロジェクトチームを管理・統括する業務。
    プロジェクトにおけるサブチームのリーダーとして、数名のメンバーの工数、進捗、品質などを管理する。

・PG（PE）
    プログラマ
    コンピュータシステムのプログラムを作る。
    SEが作成した仕様書や設計書に基づいてプログラミング言語を用いてコードを実装する。

・SE
    システムエンジニア
    主に上流工程（設計や要件定義など）を主業務とするが、中小規模の開発ではシステムエンジニアがプログラミングを兼ねるケースもある。
    顧客の業務分析、要件定義、作業工数見積もり、開発プロジェクトの手配・指揮・管理、テスト等を行う。
    

・デザイナー
    クライアントや依頼者の求めに応じたデザインを考案する仕事。
    Webデザイナー：Webサイトの構成とレイアウト決め。デザインを作る。コーディングを行う。

・エンジニア
    ・フロントエンド・エンジニア
        WebサービスやWebアプリケーションで直接ユーザーの目に触れる部分を担当するエンジニア。

    ・サーバーサイド・エンジニア
        Webサーバー側やデータベースのシステムなど、ユーザーの目に見えない部分を担当するエンジニア。
        バックエンド・エンジニアよりサーバーについての知識がある。

    ・バックエンド・エンジニア
        サーバーサイド・エンジニアとほぼ同義。
        WEB系企業ではバックエンド、基幹系企業ではサーバーサイドと呼ばれることが多い。

■ UI（ユーザーインターフェース）
・UI
    User Interface。ユーザーがPCとやり取りをする際の入力や表示方法などの仕組みのこと。

    ・CUI
        Character User Interface
        Character-based User Interface
        Console User Interface
        Command Line Interface（CLI）
        キーボード入力によってOS上の操作を行うインターフェース。

    ・GUI
        Graphical User Interface
        情報の提示に画像や図形を多用し、基礎的な操作の大半をマウスやタッチスクリーンなどによる画面上の位置の指示により
        行うことができるインターフェース。

■ ファイル／ディレクトリ
・ファイル
    パソコンでデータを扱うときの基本単位となる、データのまとまりのこと。

・拡張子
    ファイルの種類を識別するためにファイルの名前の末尾につけられる文字列。

・ディレクトリ
    複数のファイルを格納し、ファイルを分類・整理することができる保管場所のこと。
    OSによってはフォルダという。

    ・ルート・ディレクトリ
        ファイル階層における最初または最上階層にあるディレクトリのこと。

    ・カレント・ディレクトリ
        ユーザーが現時点で作業を行なっているディレクトリのこと。

・パス
    特定のファイルの場所までの道筋のこと。

    ・絶対パス
        現在位置とは無関係に、ドライブやシステムの最上位ディレクトリ（ルートディレクトリ）から目的のディレクトリやファイルまでの
        道筋を省略なくすべて記述する方法。

    ・相対パス
        システムが現在操作対象としているカレントディレクトリを起点に、指し示したいディレクトリやファイルの相対位置を記述する方法。

■ ネットワーク
・LAN
    Local Area Network
    ネットワークの種類のひとつで、建物内やフロア内といった狭い範囲にあるコンピューターで構成されたネットワークのこと。

・WAN
    Wide Area Network
    遠隔地にあるLANやホスト同士を公衆回線網で接続したネットワークを指す。

・クライアント
    サーバに対してサービスの依頼を行いその提供を受けるような、コンピュータやアプリケーションのことをいう。
    サーバからサービスを受ける側を指す。

・サーバー
    サービスを提供するソフトウェア、あるいはその機能が稼働しているコンピュータのこと。
    クライアントからの要求に対して情報や処理結果を提供する機能を果たす側を指す。

■ 各種プロトコル
    プロトコル：通信をする際の手順や規格のこと。

・HTTP
    HyperText Transfer Protocol
    WebサーバとWebクライアントの間でデータの送受信を行うために用いられるプロトコル。
    
・FTP
    File Transfer Protocol
    クライアントとサーバの間でファイル転送を行うための通信プロトコル。

・HTTPS
    Hypertext Transfer Protocol Secure
    HTTPによる通信をより安全に行うためのプロトコルおよびURIスキーム。厳密に言えば、HTTPS自体はプロトコルではなく、
    SSL/TLSプロトコルによって提供されるセキュアな接続の上でHTTP通信を行うこと。

・SSL
    Secure Sockets Layer
    データを暗号化して送受信するプロトコル。
    TLS（Transport Layer Security）というSSLの次世代規格がある。
    ブラウザとサーバ間の通信に使われる。

・SSH
    Secure Shell
    暗号や認証の技術を利用して、安全にリモートコンピュータと通信するためのプロトコル。
    パスワードなどの認証部分を含むすべてのネットワーク上の通信が暗号化される。
    デバイス間の通信に使われる。

・ポート、ポート番号
    TCP/IPにおいて、同じコンピュータ内で動作する複数のソフトウェアのどれが通信するかを指定するための番号。
    IPアドレスを建物の住所に例えるなら、ポートは個別の部屋、ポート番号は部屋番号に例えられる

・HTTP、FTP、SSHの各ポート番号
    TCP/80：HTTP
    TCP/20：FTP（データ）
    TCP/21：FTP（制御）
    TCP/22：SSH

・ファイアウォール
    企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るためのシステム。
    送られてくるパケットの情報から接続を許可するか判断し、不正なアクセスであると判断した際には、管理者に通報できるよう設計されている。

・TCP
    Transmission Control Protocol
    IP（Internet Protocol）の一段階上位層のプロトコル（通信規約）として標準的に使われるものの一つ。
    トランスポート層（レイヤ４）で動作するプロトコル。

■ IPアドレス
・IPアドレス
    IPにおいてパケットを送受信する機器を判別するための番号。

    ・グローバルIPアドレス
        プライベートIPアドレス、リンクローカルアドレス、特殊用途のIPアドレスなどを除いたIPアドレス。
        インターネットの接続用に利用され、重複が発生しないように管理される。

    ・プライベートIPアドレス
        プライベートネットワーク（外部から利用できない社内LANなど）のアドレスとして使うことができるアドレス。
        ローカルIPアドレスともいう。

■ ドメイン
・ドメイン
    インターネット上に存在するコンピューターやネットワークを識別するための名前。
    ネット上の住所に当たる。

・DNS
    Domain Name System
    インターネット上のホスト名や電子メールのアドレスに使われるドメイン名と、IPアドレスとの対応づけ（正引き、逆引き）
    を管理するために使用されているシステム。
    192.168.1.1」なら「http://www.○○○.com」みたいな。

・VPN
    Virtual Private Network
    インターネットなどに接続している利用者の間に仮想的なトンネルを構築し、プライベートなネットワークを拡張する技術。
    物理的に離れている拠点のネットワークを、あたかも自分の拠点と同一ネットワークかのような利便性や安全性で使用できる。

・ブリッジ
    データリンク層（レイヤ２）で動作する機器。受信したデータのMACアドレスなどデータリンク層の宛先情報を参照して中継の可否を判断する。

・プロキシサーバー
    コンピューターに代わってインターネットに接続しサイトへアクセスするサーバー。
    社内LANと外部インターネットの間に設置し、URLをフィルタリングしたり匿名性を確保したりする。

■ 電子メール
・SMTP
    Simple Mail Transfer Protocol
    電子メールを送信するために使用するアプリケーション層（レイヤ７）のプロトコル。
    メールソフトから、メールサーバへ電子メールを送信する際に使われる。

・POP
    Post Office Protocol
    電子メールを受信するために使用するアプリケーション層（レイヤ７）のプロトコル。
    メールサーバにメールが届いた後、ユーザーがパソコンなどの端末にメールをダウンロードして、端末上で管理する。

・IMAP
    Internet Message Access Protocol
    インターネットを使用してメッセージ（メール）にアクセスするプロトコルのこと。
    メールサーバにあるメールをPCなどの端末にはダウンロードせず、メールサーバ上で管理されているメールをメールソフト（メーラー）で閲覧する。

■ セッションとクッキー
・セッション
    接続/ログインしてから、切断/ログオフするまでの、一連の操作や通信のこと。
    
・クッキー
    ホームページを訪問したユーザーの情報を一時的に保存する仕組み。情報はクライアント側に保存される。
    次にアクセスしたときに自動的に利用者の識別が行われ、前回の続きのようにサービスを受けることができる。


・キャッシュ
    キャッシュは画像やHTMLのデータなどをクライアント側のブラウザに保存することにより表示速度を向上させるもの。
    しかし、ウェブページの更新があってもその内容が反映されず、キャッシュデータ（更新前のページ）を表示し続ける場合があったり、
    キャッシュデータが増えるとメモリが圧迫し、デバイスの動作が重くなるといったデメリットもある。

■ DB（データベース）について
・インデックス
    データの参照を高速化する仕組み。

■ テストについて
・フロー
    コンピュータプログラムを構成する命令や手続き、処理の流れのこと。

■ チケット管理ツール
    チケット管理とは、実施するべき作業や課題を「チケット」として管理する方法。
    チケットの発行・処理枚数により、プロジェクト全体の状況を把握する。

・タスク
    実施すべき作業、修正すべきバグなど。

■ バージョン管理
・Git
    プログラムのソースコードなどの変更履歴を記録・追跡するための分散型バージョン管理システム。
    開発者自身のローカルPCにリモートリポジトリの完全なコピーである”ローカルリポジトリ”を持ち、修正や追加をローカルリポジトリへコミットする。


・SVN
    Apache Subversion
    プログラムのソースコードなどを管理する集中型バージョン管理システムの一つ。
    サーバーにインストールした”リモートリポジトリ”だけが、ソースコードのバージョンを管理する。
    （修正や追加をリモートリポジトリへコミット）

・デグレ
    新しいバージョンのソフトウェアの品質が、以前より悪くなること。
    また、修正した不具合やバグが再発・復活すること。

・マージツール
    複数のファイル比較、マージ、およびフォルダ同期を行うツール。
    